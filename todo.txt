DONE -- remove bipolar mode option 
DONE -- stop waveshaping from happening
DONE -- create envelope follower and make the visual indicator respond to it
DONE -- figure out how to add knobs for attack, release, 
DONE ( it was because I used num_samples instead of num_oversamples causing probably a segfault) -- investigate why rapidly changing oversampling rate crashes ardour
DONE -- Hook up attack and release knobs
DONE -- make plugin basic function work
DONE -- Reimplement right click menu as a widget instead of a window
DONE -- Create right click menu directly from UI so that it draws at the top
DONE -- Give ability to enable/disable menuwidget items
DONE -- close right click menu if mouse leaves graph drawing area
DONE -- make attack/release knobs logarithmic
DONE -- make warp knobs work agai
-- Put back in a switch for expo/linear
-- redesign attack/release knobs, possibly with a graphic of the envelope
-- add units to controls, preferrably generated from the control itself
-- Implement smoothing control
-- Add knob for stereo link
DONE -- Investigate ParamSmooth stuff
-- Investigate ways to implement gain reduction VU meters
-- implement sidechain inputs and add switch for them
DONE -- investigate ways to replace the custom data structures with std:: ones
-- (far goal) refactor to allow any number of channels (theoretically)
-- (far goal) implement presets for the graph editor, in such a way that they could be smoothly morphed. NOTE: running sizeof(graphdyn::Graph) returns a value of 31312
bytes. This is pretty huge and I'm thinking it could possibly be simplified to an
array of 4096 floats which would be about half the size, then linearly interpolate
between them. I would have to do more research but this is more samples than
the resolution of most monitors so it should be plenty to accurately reconstruct
the graph contents, and faster to run as it's basically a wavetable.

To (maybe) pull request in pdesaulniers' wolf-shaper
-- make themes work more globally
-- potentially reimplement right click menu as a widget like I am doing
-- presets implementation from whenever I do t
-- units for controls if desired
